{"version":3,"sources":["components/Packet/Packet.js","components/Error.js","MarketplaceAPI.js","components/Modal/Modal.js","serviceWorker.js","components/Navbar/Navbar.js","components/Packet/PacketManager.js","App.js","index.js"],"names":["Packet","style","maxWidth","minWidth","margin","this","props","name","theme","version","description","className","icon","faDownload","href","id","target","faInfoCircle","author","Date","toDateString","React","Component","Error","message","MarketplaceAPI","eventHandler","EventEmitter","packets","fetch","then","response","a","json","packet","push","key","_id","catch","err","console","error","emit","AddPacketModal","state","open","toggle","bind","handleInputChange","handleSubmit","handleClose","event","value","setState","preventDefault","data","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","marketplaceApi","getData","active","onClick","faPlusSquare","role","aria-label","onSubmit","htmlFor","placeholder","onChange","type","faTrash","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","NavBar","toggleNavbar","collapseOpen","expand","sticky","e","ready","update","reload","faShoppingCart","navbar","faHome","faBoxes","size","seamless","faSearch","PacketManager","on","MarketplaceApi","App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.527b96b4.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardTitle, Badge, CardBody, CardFooter, Button } from \"shards-react\";\nimport { faDownload, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Packet extends React.Component {\n    render() {\n        return <Card style={\n            {\n                maxWidth: \"300px\",\n                minWidth: \"300px\",\n                margin: \"1rem\"\n            }\n        }>\n            <CardBody>\n                <CardTitle>{this.props.name} <Badge theme=\"secondary\">{this.props.version}</Badge></CardTitle>\n                <p>{this.props.description}</p>\n                <div className=\"d-flex justify-content-between\">\n                    <Button><FontAwesomeIcon icon={faDownload} /> Install</Button>\n                    <Button theme=\"secondary\" href={ \"https://lightainer-api.frozencloud.de?id=\" + this.props.id } target=\"_blank\"><FontAwesomeIcon icon={faInfoCircle} /> Details</Button>\n                </div>\n\n            </CardBody>\n            <CardFooter className=\"small\">{this.props.author} â€¢ {new Date().toDateString()}</CardFooter>\n        </Card>\n    }\n}\n\nexport default Packet;","import React from 'react';\n\nclass Error extends React.Component {\n    render() {\n        return <div>{ this.props.message }</div>\n    }\n}\n\nexport default Error;","import React from 'react';\nimport { EventEmitter } from \"events\";\nimport Packet from './components/Packet/Packet';\nimport Error from './components/Error';\nclass MarketplaceAPI {\n\n    constructor() {\n        this.eventHandler = new EventEmitter();\n    }\n\n    async getData() {\n        let packets = [];\n        await fetch('https://lightainer-api.frozencloud.de').then(async (response) => {\n            for (const packet of await response.json()) {\n                packets.push(<Packet\n                    key={ packet._id }\n                    id={ packet._id }\n                    name={ packet.name }\n                    version={ packet.version }\n                    author={ packet.author }\n                    description={ packet.description }\n                />)\n            }\n        }).catch((err) => {\n            console.error(err.message);\n            packets.push(<Error message=\"Something went wrong with Loading the Packets.\"/>);\n        });\n\n        this.eventHandler.emit('packets', packets);\n    }\n}\n\nexport default MarketplaceAPI;","import React from \"react\";\nimport { NavLink, Modal, ModalBody, ModalHeader, Form, FormGroup, FormInput, FormTextarea, Button, FormFeedback } from \"shards-react\";\nimport { faPlusSquare, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class AddPacketModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: false };\n        this.toggle = this.toggle.bind(this);\n\n        this.state = {\n            name: '',\n            version: '',\n            description: ''\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.id;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        let data = this.state;\n        data.author = 'Marketplace';\n        await fetch('https://lightainer-api.frozencloud.de', {\n            method: 'POST',\n            mode: 'no-cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrer: 'no-referrer',\n            body: JSON.stringify(data)\n          });\n\n          this.props.marketplaceApi.getData();\n          this.setState({\n            name: '',\n            version: '',\n            description: '',\n            open: false\n        });\n    }\n\n    toggle() {\n        this.setState({\n            open: !this.state.open\n        });\n    }\n\n    handleClose(event) {\n        event.preventDefault();\n        this.setState({\n            name: '',\n            version: '',\n            description: '',\n            open: false\n        });\n    }\n\n    render() {\n        const { open } = this.state;\n        return (\n            <>\n                <NavLink active onClick={this.toggle} href=\"#\">\n                    <FontAwesomeIcon icon={faPlusSquare} /> Add Packet\n        </NavLink>\n                <Modal open={open} toggle={this.toggle}>\n                    <ModalHeader><span role=\"img\" aria-label=\"Packet\">ðŸ“¦</span> Add a Packet</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <label htmlFor=\"name\">Name</label>\n                                <FormInput id=\"name\" placeholder=\"Packet Name\" value={this.state.name} onChange={this.handleInputChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"version\">Version</label>\n                                <FormInput id=\"version\" placeholder=\"1.0.0\" value={this.state.version} onChange={this.handleInputChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"description\">Description</label>\n                                <FormTextarea id=\"description\" placeholder=\"Packet Description Text\" value={this.state.description} onChange={this.handleInputChange} />\n                            </FormGroup>\n                            <div className=\"d-flex justify-content-between\">\n                                <Button type=\"submit\"><FontAwesomeIcon icon={faPlusSquare} /> Add Packet</Button>\n                                <Button theme=\"secondary\" onClick={ this.handleClose }><FontAwesomeIcon icon={faTrash} /> Cancel</Button>\n                            </div>\n                        </Form>\n                        <FormFeedback />\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nexport function update() {\n  if('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(update => {\n      update.update();\n    })\n  }\n}\n","import React from 'react';\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n} from \"shards-react\";\nimport { faSearch, faHome, faShoppingCart, faBoxes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AddPacketModal from '../Modal/Modal';\nimport * as serviceWorker from '../../serviceWorker';\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n\n        this.state = {\n            collapseOpen: false\n        };\n    }\n\n    toggleNavbar() {\n        this.setState({\n            ...this.state,\n            ...{\n                collapseOpen: !this.state.collapseOpen\n            }\n        });\n    }\n\n    render() {\n        return <Navbar type=\"dark\" theme=\"primary\" expand=\"md\" sticky=\"top\">\n            <NavbarBrand href=\"\" onClick={(e) => {\n                e.preventDefault();\n                serviceWorker.update();\n                window.location.reload();\n            }}><FontAwesomeIcon icon={faShoppingCart} /> Lightainer Marketplace</NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} />\n\n            <Collapse open={this.state.collapseOpen} navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink active href=\"/marketplace\">\n                            <FontAwesomeIcon icon={faHome} /> Home\n              </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <AddPacketModal marketplaceApi={this.props.marketplaceApi} />\n                    </NavItem>\n                    <NavItem>\n                        <NavLink active href=\"#\">\n                            <FontAwesomeIcon icon={faBoxes} /> My Packets\n              </NavLink>\n                    </NavItem>\n                </Nav>\n\n                <Nav navbar className=\"ml-auto\">\n                    <InputGroup size=\"sm\" seamless>\n                        <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>\n                                <FontAwesomeIcon icon={faSearch} />\n                            </InputGroupText>\n                        </InputGroupAddon>\n                        <FormInput className=\"border-0\" placeholder=\"Search...\" />\n                    </InputGroup>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    }\n}\n\nexport default NavBar;","import React from 'react';\nimport { Container } from 'shards-react';\n\nclass PacketManager extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            packets: [<div className=\"spinner-border\" role=\"status\" key=\"pm_spinner\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>]\n        }\n\n        this.props.marketplaceApi.eventHandler.on('packets', (packets) => {\n            this.setState({\n                packets: packets\n            });\n        })\n    }\n\n    render() {\n        return <Container className=\"d-flex flex-wrap justify-content-center mt-3\">{ this.state.packets }</Container>\n    }\n}\n\nexport default PacketManager;","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nimport MarketplaceApi from './MarketplaceAPI';\nimport NavBar from './components/Navbar/Navbar';\nimport PacketManager from './components/Packet/PacketManager';\n\nconst MarketplaceAPI = new MarketplaceApi();\n\nfunction App() {\n  MarketplaceAPI.getData();\n  return (\n    <>\n      <NavBar marketplaceApi={ MarketplaceAPI }/>\n      <PacketManager marketplaceApi={ MarketplaceAPI }/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}